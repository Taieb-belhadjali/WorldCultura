parameters:
    stripe_public_key: '%env(STRIPE_PUBLIC_KEY)%'
    stripe_secret_key: '%env(STRIPE_SECRET_KEY)%'
    stripe_webhook_secret: '%env(STRIPE_WEBHOOK_SECRET)%'
    uploads_directory: '%kernel.project_dir%/public/uploads'

services:
    # Automatically enable autowiring and autoconfiguration
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    App\Service\MailerService:
         autowire: true
         autoconfigure: true
         arguments:
            $from: '%env'
            $replyTo: 'kingamine242@gmail.com'

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    # Define the namespace for autowiring
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Tests,Kernel.php}'

    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # Inject the Stripe service with the parameters
    App\Service\StripeService:
        arguments:
            $params: '@parameter_bag'
            $entityManager: '@doctrine.orm.entity_manager'
            $requestStack: '@request_stack'
    
    # Add the ProductRepository explicitly if needed
    App\Repository\ProductRepository:
        tags: ['doctrine.repository_service']

    # Explicitly inject the SessionInterface for CustomerController
    App\Controller\CustomerController:
        arguments:
            $entityManager: '@doctrine.orm.entity_manager'
            $stripeService: '@App\Service\StripeService'
            $requestStack: '@request_stack'
